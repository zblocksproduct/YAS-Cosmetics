/* eslint-disable */
!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o();else if("function"==typeof define&&define.amd)define([],o);else{var r=o();for(var t in r)("object"==typeof exports?exports:e)[t]=r[t]}}(this,(()=>(()=>{"use strict";var e={};return(()=>{var o=e;Object.defineProperty(o,"__esModule",{value:!0}),o.GatedVerifier=void 0;const r="https://wallettest.zblocks.io";o.GatedVerifier=new class{async openWalletWindow(e){return new Promise(((o,t)=>{const n=window.open(e,"_blank","width=800,height=600");setTimeout((()=>{n?.close(),t(new Error("Timeout: No response received."))}),12e4),n?window.addEventListener("message",(e=>{if(e.origin===r){const r=e.data;console.log("Event response:",r),n.close(),o(r)}})):t(new Error("Failed to open popup window."))}))}async verify(e){const o=r+"/verifier?verify="+e.code+"&id="+e.id;try{const e=await this.openWalletWindow(o);return console.info("Window response",e),e}catch(e){return console.error(e),{status:!1,errorMessage:e.message}}}}})(),e})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGdhLXZlcmlmaWVyLmpzIiwibWFwcGluZ3MiOiJDQUFBLFNBQTJDQSxFQUFNQyxHQUNoRCxHQUFzQixpQkFBWkMsU0FBMEMsaUJBQVhDLE9BQ3hDQSxPQUFPRCxRQUFVRCxTQUNiLEdBQXFCLG1CQUFYRyxRQUF5QkEsT0FBT0MsSUFDOUNELE9BQU8sR0FBSUgsT0FDUCxDQUNKLElBQUlLLEVBQUlMLElBQ1IsSUFBSSxJQUFJTSxLQUFLRCxHQUF1QixpQkFBWkosUUFBdUJBLFFBQVVGLEdBQU1PLEdBQUtELEVBQUVDLEVBQ3ZFLENBQ0EsQ0FURCxDQVNHQyxNQUFNLEksZ0RDUlRDLE9BQU9DLGVBQWVSLEVBQVMsYUFBYyxDQUFFUyxPQUFPLElBQ3REVCxFQUFRVSxtQkFBZ0IsRUFDeEIsTUFBTUMsRUFBYyxrQkF3Q3BCWCxFQUFRVSxjQUFnQixJQXZDeEIsTUFDSSxzQkFBTUUsQ0FBaUJDLEdBQ25CLE9BQU8sSUFBSUMsU0FBUSxDQUFDQyxFQUFTQyxLQUV6QixNQUFNQyxFQUFjQyxPQUFPQyxLQUFLTixFQUFVLFNBQVUsd0JBQ3BETyxZQUFXLEtBQ1BILEdBQWFJLFFBQ2JMLEVBQU8sSUFBSU0sTUFBTSxrQ0FBa0MsR0FDcEQsTUFHQ0wsRUFDQUMsT0FBT0ssaUJBQWlCLFdBQVlDLElBQ2hDLEdBQUlBLEVBQU1DLFNBQVdkLEVBQWEsQ0FDOUIsTUFBTWUsRUFBY0YsRUFBTUcsS0FDMUJDLFFBQVFDLElBQUksa0JBQW1CSCxHQUMvQlQsRUFBWUksUUFDWk4sRUFBUVcsRUFDWixLQUlKVixFQUFPLElBQUlNLE1BQU0sZ0NBQ3JCLEdBRVIsQ0FDQSxZQUFNUSxDQUFPQyxHQUNULE1BQU1sQixFQUFXRixFQUFjLG9CQUFzQm9CLEVBQUtDLEtBQU8sT0FBU0QsRUFBS0UsR0FDL0UsSUFDSSxNQUFNUCxRQUFvQnBCLEtBQUtNLGlCQUFpQkMsR0FFaEQsT0FEQWUsUUFBUU0sS0FBSyxrQkFBbUJSLEdBQ3pCQSxDQUNYLENBQ0EsTUFBT1MsR0FFSCxPQURBUCxRQUFRTyxNQUFNQSxHQUNQLENBQUVDLFFBQVEsRUFBT0MsYUFBY0YsRUFBTUcsUUFDaEQsQ0FDSixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW4tZ2F0ZWQtdmVyaWZpZXItc2RrL3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly90b2tlbi1nYXRlZC12ZXJpZmllci1zZGsvLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIHtcblx0XHR2YXIgYSA9IGZhY3RvcnkoKTtcblx0XHRmb3IodmFyIGkgaW4gYSkgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyA/IGV4cG9ydHMgOiByb290KVtpXSA9IGFbaV07XG5cdH1cbn0pKHRoaXMsICgpID0+IHtcbnJldHVybiAiLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR2F0ZWRWZXJpZmllciA9IHZvaWQgMDtcbmNvbnN0IGNoaWxkT3JpZ2luID0gXCJXQUxMRVRfSE9TVF9VUkxcIjtcbmNsYXNzIFdhbGxldEdhdGVkVmVyaWZpZXIge1xuICAgIGFzeW5jIG9wZW5XYWxsZXRXaW5kb3cocG9wdXBVcmwpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIC8vIE9wZW4gYSBuZXcgYnJvd3NlciB3aW5kb3cgcG9wLXVwXG4gICAgICAgICAgICBjb25zdCBjaGlsZFdpbmRvdyA9IHdpbmRvdy5vcGVuKHBvcHVwVXJsLCBcIl9ibGFua1wiLCBcIndpZHRoPTgwMCxoZWlnaHQ9NjAwXCIpO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY2hpbGRXaW5kb3c/LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIlRpbWVvdXQ6IE5vIHJlc3BvbnNlIHJlY2VpdmVkLlwiKSk7XG4gICAgICAgICAgICB9LCAyICogNjAgKiAxMDAwIC8vIDIgbWludXRlc1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSB3aW5kb3cgd2FzIHN1Y2Nlc3NmdWxseSBvcGVuZWRcbiAgICAgICAgICAgIGlmIChjaGlsZFdpbmRvdykge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50Lm9yaWdpbiA9PT0gY2hpbGRPcmlnaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFwaVJlc3BvbnNlID0gZXZlbnQuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRXZlbnQgcmVzcG9uc2U6XCIsIGFwaVJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkV2luZG93LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGFwaVJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIkZhaWxlZCB0byBvcGVuIHBvcHVwIHdpbmRvdy5cIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgYXN5bmMgdmVyaWZ5KGNvbmYpIHtcbiAgICAgICAgY29uc3QgcG9wdXBVcmwgPSBjaGlsZE9yaWdpbiArIFwiL3ZlcmlmaWVyP3ZlcmlmeT1cIiArIGNvbmYuY29kZSArIFwiJmlkPVwiICsgY29uZi5pZDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGFwaVJlc3BvbnNlID0gYXdhaXQgdGhpcy5vcGVuV2FsbGV0V2luZG93KHBvcHVwVXJsKTtcbiAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhcIldpbmRvdyByZXNwb25zZVwiLCBhcGlSZXNwb25zZSk7XG4gICAgICAgICAgICByZXR1cm4gYXBpUmVzcG9uc2U7IC8vIFlvdSBjYW4gbW9kaWZ5IHRoaXMgYmFzZWQgb24geW91ciBhY3R1YWwgcmVzcG9uc2Ugc3RydWN0dXJlXG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiB7IHN0YXR1czogZmFsc2UsIGVycm9yTWVzc2FnZTogZXJyb3IubWVzc2FnZSB9O1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5HYXRlZFZlcmlmaWVyID0gbmV3IFdhbGxldEdhdGVkVmVyaWZpZXIoKTtcbiJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJhIiwiaSIsInRoaXMiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiR2F0ZWRWZXJpZmllciIsImNoaWxkT3JpZ2luIiwib3BlbldhbGxldFdpbmRvdyIsInBvcHVwVXJsIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJjaGlsZFdpbmRvdyIsIndpbmRvdyIsIm9wZW4iLCJzZXRUaW1lb3V0IiwiY2xvc2UiLCJFcnJvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsIm9yaWdpbiIsImFwaVJlc3BvbnNlIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJ2ZXJpZnkiLCJjb25mIiwiY29kZSIsImlkIiwiaW5mbyIsImVycm9yIiwic3RhdHVzIiwiZXJyb3JNZXNzYWdlIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=
